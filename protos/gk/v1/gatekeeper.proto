syntax = "proto3";

package gk.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

service Gatekeeper {
	rpc CreateAccessPolicy(AccessPolicy) returns (AccessPolicy) {
		option (google.api.http) = {
			post : "/v1/access-policies"
			body : "*"
		};
	}

	rpc CreateCollection(CreateCollectionRequest) returns (Collection) {
		option (google.api.http) = {
			post : "/v1/collections"
			body : "*"
		};
	}

	rpc CreateIdentity(CreateIdentityRequest) returns (Identity) {
		option (google.api.http) = {
			post : "/v1/identities"
			body : "*"
		};
	}

	rpc CreateRbacPolicy(RbacPolicy) returns (RbacPolicy) {
		option (google.api.http) = {
			post : "/v1/rbac-policies"
			body : "*"
		};
	}

	rpc CreateRole(Role) returns (Role) {
		option (google.api.http) = {
			post : "/v1/roles"
			body : "*"
		};
	}
}

enum PrincipalType {
	collection = 0;
	identity   = 1;
}

message AccessPolicy {
	string id   = 1;
	string name = 2;

	repeated Principal        principals = 3;
	repeated AccessPolicyRule rules      = 4;
}

message AccessPolicyRule {
	google.protobuf.Struct attrs    = 2;
	string                 resource = 1;
}

message Collection {
	string id   = 1;
	string name = 2;
}

message CreateCollectionRequest {
	string name = 1;
}

message CreateIdentityRequest {
	string sub = 1;
}

message Identity {
	string id  = 1;
	string sub = 2;
}

message Principal {
	PrincipalType type = 1;
	string        id   = 2;
}

message RbacPolicy {
	string id   = 1;
	string name = 2;

	repeated Principal      principals = 3;
	repeated RbacPolicyRule rules      = 4;
}

message RbacPolicyRule {
	google.protobuf.Struct attrs   = 2;
	string                 role_id = 1;
}

message Role {
	string id   = 1;
	string name = 2;

	repeated string permissions = 3;
}
