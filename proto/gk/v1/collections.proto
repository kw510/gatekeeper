syntax = "proto3";

package gk.v1;

import "gk/v1/common.proto";
import "gk/v1/identities.proto";
import "google/api/annotations.proto";

service Collections {
	rpc Create(CreateCollectionRequest) returns (Collection) {
		option (google.api.http) = {
			post : "/v1/collections"
			body : "*"
		};
	}

	rpc Retrieve(RetrieveCollectionRequest) returns (Collection) {
		option (google.api.http) = {
			get : "/v1/collections/{id}"
		};
	}

	rpc Update(UpdateCollectionRequest) returns (Collection) {
		option (google.api.http) = {
			patch : "/v1/collections/{id}"
			body : "*"
		};
	}

	// Members
	rpc AddMember(AddCollectionMemberRequest) returns (AddCollectionMemberResponse) {
		option (google.api.http) = {
			post : "/v1/collections/{collection_id}/members"
			body : "*"
		};
	}

	rpc ListMembers(ListCollectionMembersRequest) returns (ListCollectionMembersResponse) {
		option (google.api.http) = {
			get : "/v1/collections/{id}/members?_limit={page.limit}&_offset={page.offset}"
		};
	}

	rpc RemoveMember(RemoveCollectionMemberRequest) returns (RemoveCollectionMemberResponse) {
		option (google.api.http) = {
			delete : "/v1/collections/{collection_id}/members/{identity_id}"
		};
	}
}

message Collection {
	string id   = 1;
	string name = 2;
}

message CreateCollectionRequest {
	optional string id   = 1;
	string          name = 2;
}

message RetrieveCollectionRequest {
	string id = 1;
}

message UpdateCollectionRequest {
	string          id   = 1;
	optional string name = 2;
}

// Members
message AddCollectionMemberRequest {
	string collection_id = 1;
	string identity_id   = 2;
}

message AddCollectionMemberResponse {}

message ListCollectionMembersRequest {
	string id = 1;

	optional Page page = 2;
}

message ListCollectionMembersResponse {
	repeated Identity data = 1;
	Meta              meta = 2;
}

message RemoveCollectionMemberRequest {
	string collection_id = 1;
	string identity_id   = 2;
}

message RemoveCollectionMemberResponse {}
