syntax = "proto3";

package gk.v1;

import "gk/v1/common.proto";
import "gk/v1/identities.proto";
import "google/api/annotations.proto";

service Collections {
	rpc Create(CollectionsCreateRequest) returns (Collection) {
		option (google.api.http) = {
			post : "/v1/collections"
			body : "*"
		};
	}

	rpc Retrieve(CollectionsRetrieveRequest) returns (Collection) {
		option (google.api.http) = {
			get : "/v1/collections/{id}"
		};
	}

	rpc Update(CollectionsUpdateRequest) returns (Collection) {
		option (google.api.http) = {
			patch : "/v1/collections/{id}"
			body : "*"
		};
	}

	// Members
	rpc AddMember(CollectionsAddMemberRequest) returns (CollectionsAddMemberResponse) {
		option (google.api.http) = {
			post : "/v1/collections/{collection_id}/members"
			body : "*"
		};
	}

	rpc ListMembers(CollectionsListMembersRequest) returns (CollectionsListMembersResponse) {
		option (google.api.http) = {
			get : "/v1/collections/{id}/members?_limit={page.limit}&_offset={page.offset}"
		};
	}

	rpc RemoveMember(CollectionsRemoveMemberRequest) returns (CollectionsRemoveMemberResponse) {
		option (google.api.http) = {
			delete : "/v1/collections/{collection_id}/members/{identity_id}"
		};
	}
}

message Collection {
	string id   = 1;
	string name = 2;
}

message CollectionsCreateRequest {
	optional string id   = 1;
	string          name = 2;
}

message CollectionsRetrieveRequest {
	string id = 1;
}

message CollectionsUpdateRequest {
	string          id   = 1;
	optional string name = 2;
}

// Members
message CollectionsAddMemberRequest {
	string collection_id = 1;
	string identity_id   = 2;
}

message CollectionsAddMemberResponse {}

message CollectionsListMembersRequest {
	string id = 1;

	optional Page page = 2;
}

message CollectionsListMembersResponse {
	repeated Identity data = 1;
	Meta              meta = 2;
}

message CollectionsRemoveMemberRequest {
	string collection_id = 1;
	string identity_id   = 2;
}

message CollectionsRemoveMemberResponse {}
